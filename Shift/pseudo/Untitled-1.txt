// method to handle 3 person switches
func ThreePersonShift ( [everythingFromTheORiginalConflictResolver] )
{
    List queue;
    Calendar prefCal;
    Calendar shiftCal;
    int problemShiftIndex;

    // start

    List assignedPersons = GetAssignedPeopleIndeces;

    if (assignedPersons.count > 2) // the minimum to do a 3 person swap
    {
        /*

        take first person in the queue who is eligible and assign that person to 
        the shift. 

        apply methods to a two person swap.

        if it doesn't work, or if you smartly checked to make sure there are
        enough shifts to do that, you need to try and move someone else first

        */
    }
}


// method that returns eligible switches
func GetEligibleSwitches (List assignedPersons, int toFillIndex, Person[] persons)
{
    List eligible;

    foreach (int pIndex in assignedPersons) 
    {
        foreach (int shiftIndex in persons[pIndex].prefs) 
        {
            if (toFillIndex = shiftIndex) 
            {
                eligible.add(pIndex);
                break;
            }
        }
    }

    return eligible
}

func TempAssign (int personIndex, Person[] persons, Calendar cal) 
{
    
} 

